name: Build AdGuardHome rules

on:
  schedule:
    - cron: "0 0 * * *"
    - cron: "0 6 * * *"
    - cron: "0 12 * * *"
    - cron: "0 18 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download & Merge Rules
        run: |
          mkdir -p dist tmp

          urls=(
            "https://raw.githubusercontent.com/wxglenovo/AdGuardHome-Filter/refs/heads/main/Create%20a%20Custom%20AdGuard%20Home%20Filtering%20Rule.txt"
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION.txt"
            "https://anti-ad.net/adguard.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad-edentw.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad-mo.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad-pc.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad2.txt"
            "https://raw.githubusercontent.com/sbwml/halflife-list/refs/heads/master/ad3.txt"
          )

          echo "📥 下载规则..."
          for url in "${urls[@]}"; do
            echo "Downloading $url"
            curl -sSL --retry 3 --fail "$url" >> tmp/all.txt || echo "Failed $url"
            echo "" >> tmp/all.txt
          done

          echo "🧹 清理注释、空行..."
          grep -vE '(^!|^$|##)' tmp/all.txt > tmp/merged_clean.txt

          echo "🛠 修复 @@||@@|| → @@||"
          sed -i 's/@@||@@||/@@||/g' tmp/merged_clean.txt

          echo "📌 分离 \$cookie 规则..."
          grep '^\$cookie' tmp/merged_clean.txt > tmp/cookie_rules.txt
          grep -v '^\$cookie' tmp/merged_clean.txt > tmp/other_rules.txt

          echo "📝 创建软路由专用版本..."
          grep -vE '\$script|\$popup|\$subdocument|\$frame|/\^|/\$' tmp/other_rules.txt > tmp/router_other.txt

          echo "⚡ 转换 IP 规则为 0.0.0.0 格式并排除私有 IP..."
          awk '
            function is_ip(s) {
              return s ~ /^[0-9]{1,3}(\.[0-9]{1,3}){3}$/ || s ~ /^\|\|[0-9]{1,3}(\.[0-9]{1,3}){3}\^?$/
            }
            function is_private_ip(ip) {
              split(ip, a, ".")
              return (a[1]==10) || (a[1]==127) || (a[1]==192 && a[2]==168) || (a[1]==172 && a[2]>=16 && a[2]<=31)
            }
            {
              line=$0
              gsub(/\^$/,"",line)
              gsub(/^\|\|/,"",line)
              if (is_ip(line)) {
                if (!is_private_ip(line)) print "0.0.0.0 " line
              } else if ($0 ~ /^@@\|\|/) {
                gsub(/^\@\@\|\|/,"",$0)
                gsub(/\^$/,"",$0)
                print "@@||"$0"^"
              } else {
                print "||" line "^"
              }
            }
          ' tmp/router_other.txt | sort > tmp/final_router.txt

          cat tmp/cookie_rules.txt tmp/final_router.txt > dist/AdGuardHome.txt

          echo "📊 统计规则数量..."
          rule_count=$(wc -l < dist/AdGuardHome.txt)
          allow_count=$(grep -c '^@@||' dist/AdGuardHome.txt || true)
          block_count=$(grep -c '^\|\|' dist/AdGuardHome.txt || true)
          ip_count=$(grep -c '^0\.0\.0\.0' dist/AdGuardHome.txt || true)

          echo "RELEASE_TAG=rules-$(date -u +'%Y%m%d')" >> $GITHUB_ENV
          echo "ALLOW_COUNT=$allow_count" >> $GITHUB_ENV
          echo "BLOCK_COUNT=$block_count" >> $GITHUB_ENV
          echo "IP_COUNT=$ip_count" >> $GITHUB_ENV
          echo "RULE_COUNT=$rule_count" >> $GITHUB_ENV

      - name: Compare Rules
        id: diff
        run: |
          if [ -f old_rules.txt ]; then
            old_count=$(wc -l < old_rules.txt)
          else
            old_count=0
          fi

          new_count=$(wc -l < dist/AdGuardHome.txt)
          diff_count=$((new_count - old_count))

          echo "old_count=$old_count" >> $GITHUB_ENV
          echo "new_count=$new_count" >> $GITHUB_ENV
          echo "diff_count=$diff_count" >> $GITHUB_ENV
          echo "diff_count=$diff_count" >> $GITHUB_OUTPUT

          cp dist/AdGuardHome.txt old_rules.txt

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add dist/AdGuardHome.txt old_rules.txt

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update rules: 新增 ${{ env.diff_count }} 条规则 (总数 ${{ env.new_count }})"
            git pull --rebase origin main || true
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          fi

      - name: Create Release
        if: ${{ env.diff_count != '0' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "路由器专用规则更新 - ${{ env.new_count }} 条"
          body: |
            本次规则更新：
            - 总数：${{ env.new_count }}  
            - 阻止规则：${{ env.BLOCK_COUNT }}  
            - 放行规则：${{ env.ALLOW_COUNT }}
            - IP 阻止：${{ env.IP_COUNT }}
          files: |
            dist/AdGuardHome.txt

      - name: Show Rules Stats
        run: |
          echo "================= ✅ 路由器专用 AdGuardHome Rules Build ================="
          echo "总规则数: ${{ env.RULE_COUNT }} (阻止 ${{ env.BLOCK_COUNT }}, 放行 ${{ env.ALLOW_COUNT }}, 公网 IP ${{ env.IP_COUNT }})"
          echo "============================================================"
          head -n 50 dist/AdGuardHome.txt
