name: Clean AdGuardHome whitelist

on:
  schedule:
    - cron: "0 0,15,30,45 0 * * *"   # 每天 0 点、15 分、30 分、45 分执行
    - cron: "0 0,15,30,45 6 * * *"   # 每天 6 点、15 分、30 分、45 分执行
    - cron: "0 0,15,30,45 12 * * *"  # 每天 12 点、15 分、30 分、45 分执行
    - cron: "0 0,15,30,45 18 * * *"  # 每天 18 点、15 分、30 分、45 分执行
  workflow_dispatch:         # 支持手动触发

permissions:
  contents: write

jobs:
  clean_rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download whitelist.txt
        run: |
          echo "下载 whitelist.txt 文件..."
          curl -o whitelist.txt https://raw.githubusercontent.com/wxglenovo/AdGuardHome-Filter/refs/heads/main/dist/whitelist.txt
          echo "下载完成！"

      - name: Process rules to remove redundant subdomains
        run: |
          echo "开始处理 whitelist.txt 文件..."
          cat whitelist.txt | awk '{print $1}' | sort | uniq > sorted_whitelist.txt
          
          deleted_count=0
          temp_file=$(mktemp)

          # 输出文件头部信息
          echo -e "# 处理日期: $(date)" > $temp_file
          echo -e "# 说明: 删除了冗余的子域，只保留父域" >> $temp_file
          echo -e "# 删除的子域数量: 0" >> $temp_file

          # 遍历并处理每一条域名
          while IFS= read -r line; do
            split_line=($(echo $line | tr '.' ' '))
            domain="${split_line[-2]}.${split_line[-1]}"
            
            # 检查父域是否已经记录
            if ! grep -q "$domain" $temp_file; then
              echo $domain >> $temp_file
            else
              # 如果是子域，增加删除计数
              deleted_count=$((deleted_count+1))
            fi
          done < sorted_whitelist.txt

          # 更新文件头部中的删除子域数量
          sed -i "3s/.*/# 删除的子域数量: $deleted_count/" $temp_file
          
          # 将处理后的规则写入 final_whitelist.txt
          mv $temp_file final_whitelist.txt
          echo "处理完成，删除了 $deleted_count 个子域"

      - name: Commit the cleaned whitelist
        run: |
          echo "准备提交更新..."
          git config --global user.email "youremail@example.com"
          git config --global user.name "YourName"
          git add final_whitelist.txt
          git commit -m "Cleaned whitelist by removing redundant subdomains"
          git push
          echo "提交成功！"
