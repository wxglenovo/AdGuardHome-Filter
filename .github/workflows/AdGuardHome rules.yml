name: Build AdGuardHome rules

on:
  schedule:
    - cron: "0 0 * * *"
    - cron: "0 6 * * *"
    - cron: "0 12 * * *"
    - cron: "0 18 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download & Merge Rules (Clean + Deduplicate + Conflict Remove)
        run: |
          mkdir -p tmp dist
          mapfile -t urls < ./urls.txt

          echo "📥 开始下载规则..."
          for url in "${urls[@]}"; do
            echo "Downloading $url"
            curl -sSL --retry 3 --fail --max-time 20 "$url" >> tmp/all_raw.txt || echo "Failed $url"
            echo "" >> tmp/all_raw.txt
          done

          echo "🧹 清理注释和空行..."
          grep -vE '^[[:space:]]*[!#]' tmp/all_raw.txt | sed '/^[[:space:]]*$/d' > tmp/all_cleaned.txt

          echo "📊 去重并生成重复规则日志..."
          # 生成重复规则日志（带行号）
          nl -w1 -s'|' tmp/all_cleaned.txt | awk -F'|' '
          { count[$2]++; lines[$2] = lines[$2] ? lines[$2] "\n " $1 "行: " $2 : " " $1 "行: " $2 }
          END {
              for(rule in count){
                  if(count[rule]>1) print "规则: " rule "\n" lines[rule] "\n"
              }
          }' > tmp/duplicate_rules.txt

          # 去重文件
          LC_ALL=C sort -u tmp/all_cleaned.txt > tmp/all_deduped.txt

          RAW_COUNT=$(wc -l < tmp/all_cleaned.txt)
          DEDUP_COUNT=$(wc -l < tmp/all_deduped.txt)
          DUP_COUNT=$((RAW_COUNT - DEDUP_COUNT))

          echo "⚔️ 处理黑白名单冲突..."
          grep '^@@||' tmp/all_deduped.txt > tmp/whitelist_tmp.txt
          grep -v '^@@||' tmp/all_deduped.txt > tmp/blocklist_tmp.txt

          sed 's/^@@||/||/' tmp/whitelist_tmp.txt > tmp/whitelist_core.txt
          grep -Fxf tmp/whitelist_core.txt tmp/blocklist_tmp.txt > tmp/conflict_core.txt

          # 完整冲突规则日志（保留原始 @@|| 或 ||）
          grep -Fxf tmp/conflict_core.txt tmp/all_deduped.txt > tmp/conflict_rules.txt

          grep -Fvxf tmp/conflict_core.txt tmp/blocklist_tmp.txt > tmp/blocklist.txt
          grep -Fvxf tmp/conflict_core.txt tmp/whitelist_tmp.txt > tmp/whitelist.txt

          # 添加头部信息
          TIMESTAMP=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S %Z')
          WHITELIST_COUNT=$(wc -l < tmp/whitelist.txt)
          BLACKLIST_COUNT=$(wc -l < tmp/blocklist.txt)
          CONFLICT_COUNT=$(wc -l < tmp/conflict_core.txt)

          WHITELIST_HEADER="! =====================\n! AdGuardHome 白名单\n! 更新时间: $TIMESTAMP\n! 总条数: $WHITELIST_COUNT\n! =====================\n"
          BLACKLIST_HEADER="! =====================\n! AdGuardHome 黑名单\n! 更新时间: $TIMESTAMP\n! 总条数: $BLACKLIST_COUNT\n! =====================\n"

          echo -e "$WHITELIST_HEADER" > dist/whitelist.txt
          LC_ALL=C sort -t'.' -k2,2 -k1,1 tmp/whitelist.txt >> dist/whitelist.txt
          echo -e "$BLACKLIST_HEADER" > dist/blocklist.txt
          LC_ALL=C sort -t'.' -k2,2 -k1,1 tmp/blocklist.txt >> dist/blocklist.txt

          # 输出统计
          echo "原始总数：$RAW_COUNT" | tee dist/old_rules.txt
          echo "去重后：$DEDUP_COUNT" | tee -a dist/old_rules.txt
          echo "重复规则数量：$DUP_COUNT" | tee -a dist/old_rules.txt
          echo "白名单条数：$WHITELIST_COUNT" | tee -a dist/old_rules.txt
          echo "黑名单条数：$BLACKLIST_COUNT" | tee -a dist/old_rules.txt
          echo "冲突抵消数量：$CONFLICT_COUNT" | tee -a dist/old_rules.txt
          echo "更新时间：$TIMESTAMP" | tee -a dist/old_rules.txt

      - name: Commit Changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          NEW_ADDED=$((DEDUP_COUNT - RAW_COUNT + CONFLICT_COUNT))
          [ $NEW_ADDED -lt 0 ] && NEW_ADDED=0
          COMMIT_MSG="🧩 更新 AdGuardHome 规则 | 总数: ${DEDUP_COUNT} | 新增: ${NEW_ADDED} | 去重: ${DUP_COUNT} | 抵消: ${CONFLICT_COUNT}"
          git add dist/whitelist.txt dist/blocklist.txt dist/old_rules.txt
          if git diff --cached --quiet; then
            echo "no_change=true" >> $GITHUB_OUTPUT
          else
            echo "no_change=false" >> $GITHUB_OUTPUT
            git commit -m "$COMMIT_MSG"
            git pull --rebase origin main || true
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          fi

      - name: Create or Update Release
        if: steps.commit.outputs.no_change == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ github.run_number }}"
          name: "🧩 AdGuardHome Rules"
          body: |
            ${{ steps.commit.outputs.commit_message }}
          files: |
            dist/whitelist.txt
            dist/blocklist.txt

      - name: Show Result
        run: |
          echo "================= ✅ 合并完成 ================="
          cat dist/old_rules.txt
          echo "📝 重复规则及所有出现行号和内容："
          cat tmp/duplicate_rules.txt
          echo "📝 黑白名单冲突抵消规则内容："
          cat tmp/conflict_rules.txt
          echo "前 20 行白名单示例："
          head -n 20 dist/whitelist.txt
          echo "前 20 行黑名单示例："
          head -n 20 dist/blocklist.txt
          echo "============================================================"
