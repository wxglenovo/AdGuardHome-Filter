name: Build AdGuardHome rules

on:
  schedule:
    - cron: "0 0 * * *"
    - cron: "0 6 * * *"
    - cron: "0 12 * * *"
    - cron: "0 18 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download & Merge Rules (Clean + Deduplicate + Conflict Remove)
        id: merge
        run: |
          mkdir -p tmp dist
          mapfile -t urls < ./urls.txt
          echo "üì• ÂºÄÂßã‰∏ãËΩΩËßÑÂàôÔºàÂ∏¶ÈáçËØïÔºâ..."
          for url in "${urls[@]}"; do
            echo "Downloading $url"
            curl -sSL --retry 3 --fail "$url" >> tmp/all_raw.txt || echo "Failed $url"
            echo "" >> tmp/all_raw.txt
          done
          echo "‚úÖ ‰∏ãËΩΩÂÆåÊàêÔºåÂºÄÂßãÂêàÂπ∂Êñá‰ª∂..."
          # Ê∏ÖÁêÜÊ≥®ÈáäÂíåÁ©∫Ë°å
          grep -vE '^[[:space:]]*[!#]' tmp/all_raw.txt | sed '/^[[:space:]]*$/d' > tmp/all_cleaned_temp.txt
          # Âà†Èô§Êó†ÊïàËßÑÂàô
          echo "üßπ Ê≠£Âú®Âà†Èô§ÂØπ AdGuard Home Êó†ÊïàÁöÑËßÑÂàô..."
          grep -vE '^\$\$div\[class="(-ad-|_ad_|-ads-|ad-banner-wrapper|ad-card|ad_bottom|ad_top|bannerBottom|id="Couple")"\]|\$ping,third-party|/\d{2,4}x\d{2,4}/' tmp/all_cleaned_temp.txt > tmp/all_cleaned.txt
          # ÂéªÈáçÂπ∂ÁîüÊàêÂâç20Êù°ÈáçÂ§çËßÑÂàôÊó•Âøó
          awk '
          {
              line_num=NR
              content=$0
              count[content]++
              lines[content]=lines[content] ? lines[content] "\n " line_num "Ë°å: " content : " " line_num "Ë°å: " content
              if(!seen[content]++) deduped[NR]=$0
          }
          END {
              n=0
              for(rule in count){
                  if(count[rule]>1){
                      print "ËßÑÂàô: " rule "\n" lines[rule] "\n"
                      n++
                      if(n>=20) break
                  }
              }
              for(i in deduped){
                  print deduped[i] > "tmp/all_deduped.txt"
              }
          }
          ' tmp/all_cleaned.txt > tmp/duplicate_rules.txt
          RAW_COUNT=$(wc -l < tmp/all_cleaned.txt)
          DEDUP_COUNT=$(wc -l < tmp/all_deduped.txt)
          DUP_COUNT=$((RAW_COUNT - DEDUP_COUNT))
          # ÈªëÁôΩÂêçÂçïÂÜ≤Á™ÅÂ§ÑÁêÜ
          grep '^@@||' tmp/all_deduped.txt > tmp/whitelist_tmp.txt
          grep -v '^@@||' tmp/all_deduped.txt > tmp/blocklist_tmp.txt
          sed 's/^@@||/||/' tmp/whitelist_tmp.txt > tmp/whitelist_core.txt
          grep -Fxf tmp/whitelist_core.txt tmp/blocklist_tmp.txt > tmp/conflict_core.txt
          grep -Fvxf tmp/conflict_core.txt tmp/blocklist_tmp.txt > tmp/blocklist.txt
          grep -Fvxf tmp/conflict_core.txt tmp/whitelist_tmp.txt > tmp/whitelist.txt
          CONFLICT_COUNT=$(wc -l < tmp/conflict_core.txt)
          # ÁîüÊàêÈªëÁôΩÂêçÂçïÂÜ≤Á™ÅÊó•Âøó
          awk -F':' '
          FILENAME==ARGV[1] {
              split($0,a,":")
              w_line=a[1]
              w_content=a[2]
              domain=w_content
              sub(/^@@\|\|/,"",domain)
              white[domain]=w_line "Ë°å: " w_content
              next
          }
          FILENAME==ARGV[2] {
              split($0,a,":")
              b_line=a[1]
              b_content=a[2]
              domain=b_content
              sub(/^\|\|/,"",domain)
              black[domain]=b_line "Ë°å: " b_content
          }
          END {
              for(d in white){
                  if(d in black){
                      print "===== " d " ÊäµÊ∂àËßÑÂàô ====="
                      print "ÁôΩÂêçÂçï: " white[d]
                      print "ÈªëÂêçÂçï: " black[d] "\n"
                  }
              }
          }
          ' <(awk '{print NR ":" $0}' tmp/whitelist_tmp.txt) <(awk '{print NR ":" $0}' tmp/blocklist_tmp.txt) > tmp/conflict_rules.txt
          # Ê∑ªÂä†Â§¥ÈÉ®‰ø°ÊÅØ
          TIMESTAMP=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S %Z')
          WHITELIST_COUNT=$(wc -l < tmp/whitelist.txt)
          BLACKLIST_COUNT=$(wc -l < tmp/blocklist.txt)
          WHITELIST_HEADER="! =====================\n! AdGuardHome ÁôΩÂêçÂçï\n! Êõ¥Êñ∞Êó∂Èó¥: $TIMESTAMP\n! ÊÄªÊù°Êï∞: $WHITELIST_COUNT\n! =====================\n"
          BLACKLIST_HEADER="! =====================\n! AdGuardHome ÈªëÂêçÂçï\n! Êõ¥Êñ∞Êó∂Èó¥: $TIMESTAMP\n! ÊÄªÊù°Êï∞: $BLACKLIST_COUNT\n! =====================\n"
          echo -e "$WHITELIST_HEADER" > dist/whitelist.txt
          LC_ALL=C sort -t'.' -k2,2 -k1,1 tmp/whitelist.txt >> dist/whitelist.txt
          echo -e "$BLACKLIST_HEADER" > dist/blocklist.txt
          LC_ALL=C sort -t'.' -k2,2 -k1,1 tmp/blocklist.txt >> dist/blocklist.txt
          # ËæìÂá∫ step ÂèòÈáè
          echo "raw_count=$RAW_COUNT" >> $GITHUB_OUTPUT
          echo "dedup_count=$DEDUP_COUNT" >> $GITHUB_OUTPUT
          echo "dup_count=$DUP_COUNT" >> $GITHUB_OUTPUT
          echo "conflict_count=$CONFLICT_COUNT" >> $GITHUB_OUTPUT
          
      - name: Commit Changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # ‰ªé merge step ËæìÂá∫Ëé∑ÂèñÂèòÈáè
          RAW_COUNT=${{ steps.merge.outputs.raw_count }}
          DEDUP_COUNT=${{ steps.merge.outputs.dedup_count }}
          DUP_COUNT=${{ steps.merge.outputs.dup_count }}
          CONFLICT_COUNT=${{ steps.merge.outputs.conflict_count }}
          NEW_ADDED=$((DEDUP_COUNT - RAW_COUNT + CONFLICT_COUNT))
          [ $NEW_ADDED -lt 0 ] && NEW_ADDED=0
          COMMIT_MSG="üß© Êõ¥Êñ∞ AdGuardHome ËßÑÂàô | ÊÄªÊï∞: ${DEDUP_COUNT} | Êñ∞Â¢û: ${NEW_ADDED} | ÂéªÈáç: ${DUP_COUNT} | ÊäµÊ∂à: ${CONFLICT_COUNT}"
          git add dist/whitelist.txt dist/blocklist.txt tmp/duplicate_rules.txt tmp/conflict_rules.txt
          if git diff --cached --quiet; then
            echo "no_change=true" >> $GITHUB_OUTPUT
            echo "No new rules to commit"
          else
            echo "no_change=false" >> $GITHUB_OUTPUT
            git commit -m "$COMMIT_MSG"
            git pull --rebase origin main || true
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Check file sizes
        run: |
          echo "whitelist.txt size: $(wc -c < dist/whitelist.txt)"
          echo "blocklist.txt size: $(wc -c < dist/blocklist.txt)"
          echo "duplicate_rules.txt size: $(wc -c < tmp/duplicate_rules.txt)"
          echo "conflict_rules.txt size: $(wc -c < tmp/conflict_rules.txt)"
        
      - name: Create or Update Release
        if: steps.commit.outputs.no_change == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ github.run_number }}"
          name: "üß© AdGuardHome Rules"
          body: |
            ${{ steps.commit.outputs.commit_message }}
          files: |
            ${{ if ne (filesize 'dist/whitelist.txt') 0 }}dist/whitelist.txt${{ else }}${{ '' }}${{ end }}
            ${{ if ne (filesize 'dist/blocklist.txt') 0 }}dist/blocklist.txt${{ else }}${{ '' }}${{ end }}
            ${{ if ne (filesize 'tmp/duplicate_rules.txt') 0 }}tmp/duplicate_rules.txt${{ else }}${{ '' }}${{ end }}
            ${{ if ne (filesize 'tmp/conflict_rules.txt') 0 }}tmp/conflict_rules.txt${{ else }}${{ '' }}${{ end }}

      - name: Show Result
        run: |
          echo "================= ‚úÖ ÂêàÂπ∂ÂÆåÊàê ================="
          echo "ÂéüÂßãËßÑÂàôÊÄªÊï∞Ôºö$RAW_COUNT"
          echo "ÂéªÈáçÂêéÊÄªÊï∞Ôºö$DEDUP_COUNT"
          echo "ÈáçÂ§çËßÑÂàôÊï∞ÈáèÔºö$DUP_COUNT"
          echo "ÈªëÁôΩÂêçÂçïÂÜ≤Á™ÅÊï∞ÈáèÔºö$CONFLICT_COUNT"
          echo "üìù Ââç20Êù°ÈáçÂ§çËßÑÂàôÂèäË°åÂè∑Ôºö"
          head -n 20 tmp/duplicate_rules.txt
          echo "üìù ÈªëÁôΩÂêçÂçïÂÜ≤Á™ÅÊäµÊ∂àËßÑÂàôÔºàÊåâÂüüÂêçÊòæÁ§∫ÔºåÁôΩÂêçÂçïÂíåÈªëÂêçÂçïÂêå‰∏ÄË°åÔºâÔºö"
          cat tmp/conflict_rules.txt
          echo "üìÅ ÁôΩÂêçÂçïÊñá‰ª∂Ôºödist/whitelist.txtÔºåË°åÊï∞Ôºö$WHITELIST_COUNT"
          echo "üìÅ ÈªëÂêçÂçïÊñá‰ª∂Ôºödist/blocklist.txtÔºåË°åÊï∞Ôºö$BLACKLIST_COUNT"
          echo "============================================================"
