name: Build Clash Rules

on:
  schedule:
    - cron: "0 0 * * *"     # 每天 UTC 0 点
    - cron: "0 12 * * *"    # 每天 UTC 12 点
  workflow_dispatch:

permissions:
  contents: write   # 必须，否则无法 push 或创建 Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download & Merge Rules
        run: |
          mkdir -p dist tmp
          urls=(
            "https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/Rules/adblock.txt"
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/pro.txt"
            # 可添加自定义规则源
          )

          # 下载规则
          for url in "${urls[@]}"; do
            echo "Downloading $url"
            curl -sSL --retry 3 "$url" >> tmp/all.txt || echo "Failed $url"
            echo "" >> tmp/all.txt
          done

          # 去掉空行和注释行，去重
          grep -v '^$' tmp/all.txt | grep -v '^[!#]' | sort -u > tmp/merged.txt

          # 分类型生成
          grep -E '^DOMAIN-SUFFIX' tmp/merged.txt | sort -u > dist/domain-suffix.txt
          grep -E '^DOMAIN-KEYWORD' tmp/merged.txt | sort -u > dist/domain-keyword.txt
          grep -E '^DOMAIN,' tmp/merged.txt | sort -u > dist/domain.txt

          # 生成 YAML 文件并添加头部信息
          for type in domain-suffix domain-keyword domain; do
            OUTPUT="dist/${type}.yaml"
            {
              echo "# =========================================="
              echo "# Clash 广告规则 - ${type}"
              echo "# Generated: $(date -u '+%Y-%m-%d %H:%M UTC')"
              echo "# Total rules: $(wc -l < dist/${type}.txt)"
              echo "# =========================================="
              echo ""
            } > $OUTPUT
            cat dist/${type}.txt >> $OUTPUT
          done

          # 生成完整合并 YAML
          OUTPUT="dist/merged-clash.yaml"
          {
            echo "# =========================================="
            echo "# Clash 广告规则 - 全部合并"
            echo "# Generated: $(date -u '+%Y-%m-%d %H:%M UTC')"
            echo "# Total rules: $(wc -l < tmp/merged.txt)"
            echo "# =========================================="
            echo ""
          } > $OUTPUT
          cat dist/domain-suffix.txt dist/domain-keyword.txt dist/domain.txt >> $OUTPUT

          # 设置 Release tag
          echo "RELEASE_TAG=clash-rules-$(date -u +'%Y%m%d')" >> $GITHUB_ENV

      - name: Commit & Push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add dist/*.yaml

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Clash rules: $(date -u '+%Y-%m-%d')"
            # 使用 PAT 安全推送
            git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
            git push origin main
          fi
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Clash 规则更新"
          body: "本次规则自动生成更新"
          files: |
            dist/domain-suffix.yaml
            dist/domain-keyword.yaml
            dist/domain.yaml
            dist/merged-clash.yaml

      - name: Show Rules Stats
        run: |
          echo "================= Clash Rules Stats ================="
          echo "DOMAIN-SUFFIX: $(wc -l < dist/domain-suffix.txt)"
          echo "DOMAIN-KEYWORD: $(wc -l < dist/domain-keyword.txt)"
          echo "DOMAIN: $(wc -l < dist/domain.txt)"
          echo "Merged total: $(wc -l < dist/merged-clash.yaml)"
          echo "====================================================="
